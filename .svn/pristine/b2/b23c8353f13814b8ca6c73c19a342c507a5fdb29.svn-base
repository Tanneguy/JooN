package net.nooj4nlp.gui.dialogs;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;

import net.nooj4nlp.controller.ProduceParaphrasesController.ProduceParaphrasesController;
import net.nooj4nlp.gui.shells.GrammarEditorShell;

@SuppressWarnings("serial")
public class ProduceParaphrasesDialog extends JInternalFrame
{
	private JTextField textField;
	private JTextField txtpassiveneg;
	private boolean txtpassivenegEnabled;
	private ProduceParaphrasesController controller;

	public ProduceParaphrasesDialog(GrammarEditorShell gShell)
	{
		setBounds(100, 100, 390, 276);
		setClosable(true);
		// TODO: Append grammar name to title
		setTitle("Transformation for grammar");

		getContentPane().setLayout(null);

		JLabel lblEnterAPhrase = new JLabel("Enter a phrase to parse:");
		lblEnterAPhrase.setBounds(10, 11, 132, 14);
		getContentPane().add(lblEnterAPhrase);

		textField = new JTextField();
		textField.setBounds(10, 31, 354, 20);
		getContentPane().add(textField);
		textField.setColumns(10);

		JPanel panel = new JPanel();
		panel.setBorder(new TitledBorder(null, "Transformations", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		panel.setBounds(10, 62, 356, 116);
		getContentPane().add(panel);
		panel.setLayout(null);

		ButtonGroup transformationGroup = new ButtonGroup();

		JRadioButton rdbtnNameATransformation = new JRadioButton("Name a transformation");
		rdbtnNameATransformation.setBounds(6, 20, 171, 23);
		transformationGroup.add(rdbtnNameATransformation);
		panel.add(rdbtnNameATransformation);

		txtpassiveneg = new JTextField();
		txtpassiveneg.setEnabled(false);
		txtpassiveneg.setText("+Passive-Neg");
		txtpassiveneg.setBounds(27, 50, 300, 23);
		panel.add(txtpassiveneg);
		txtpassiveneg.setColumns(10);

		txtpassivenegEnabled = false;

		JRadioButton rdbtnPerformAllTransformations = new JRadioButton("Perform All Transformations");
		rdbtnPerformAllTransformations.setBounds(6, 80, 171, 23);
		rdbtnPerformAllTransformations.setSelected(true);
		transformationGroup.add(rdbtnPerformAllTransformations);
		panel.add(rdbtnPerformAllTransformations);

		rdbtnNameATransformation.addItemListener(new ItemListener()
		{
			@Override
			public void itemStateChanged(ItemEvent arg0)
			{
				txtpassivenegEnabled = !txtpassivenegEnabled;
				txtpassiveneg.setEnabled(txtpassivenegEnabled);
			}
		});

		JCheckBox chckbxDisplayLexemes = new JCheckBox("display lexemes");
		chckbxDisplayLexemes.setBounds(10, 185, 116, 23);
		getContentPane().add(chckbxDisplayLexemes);

		JCheckBox chckbxDisplayConstraintFailures = new JCheckBox("display constraint failures");
		chckbxDisplayConstraintFailures.setBounds(10, 211, 154, 23);
		getContentPane().add(chckbxDisplayConstraintFailures);

		JButton btnProduce = new JButton("Produce Paraphrases");
		btnProduce.setBounds(229, 189, 135, 45);
		getContentPane().add(btnProduce);

		controller = new ProduceParaphrasesController(gShell);
	}

	public ProduceParaphrasesController getController()
	{
		return controller;
	}
}
