package net.nooj4nlp.gui.dialogs;

import java.awt.Color;
import java.awt.Font;
import java.awt.SystemColor;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.border.BevelBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import net.nooj4nlp.controller.preferencesdialog.AddGrmActionListener;
import net.nooj4nlp.controller.preferencesdialog.ApplyActionListener;
import net.nooj4nlp.controller.preferencesdialog.AssociateFileExtensionActionListener;
import net.nooj4nlp.controller.preferencesdialog.CancelActionListener;
import net.nooj4nlp.controller.preferencesdialog.CheckAllActionListener;
import net.nooj4nlp.controller.preferencesdialog.CopyToPreferences;
import net.nooj4nlp.controller.preferencesdialog.DefaultActionListener;
import net.nooj4nlp.controller.preferencesdialog.DeleteLexActionListener;
import net.nooj4nlp.controller.preferencesdialog.DictionariesActionListener;
import net.nooj4nlp.controller.preferencesdialog.EditLexActionListener;
import net.nooj4nlp.controller.preferencesdialog.ImportLexActionListener;
import net.nooj4nlp.controller.preferencesdialog.LoadActionListener;
import net.nooj4nlp.controller.preferencesdialog.PriorityLexActionListener;
import net.nooj4nlp.controller.preferencesdialog.PrioritySynActionListener;
import net.nooj4nlp.controller.preferencesdialog.RefreshActionListener;
import net.nooj4nlp.controller.preferencesdialog.SaveActionListener;
import net.nooj4nlp.controller.preferencesdialog.SaveAsDefaultActionListener;
import net.nooj4nlp.controller.preferencesdialog.SelectDefLanguageActionListener;
import net.nooj4nlp.controller.preferencesdialog.TextsActionListener;
import net.nooj4nlp.controller.preferencesdialog.UpdateDialogListener;
import net.nooj4nlp.controller.preferencesdialog.UpdateTablesListener;

/**
 * 
 * NooJ preferences dialog
 * 
 */
@SuppressWarnings("serial")
public class PreferencesDialog extends JDialog
{

	private JComboBox cbDefLanguage;
	private Font DFont = null;
	private Font TFont = null;
	private JTable tableMorphology;
	private JTable tableDictionary;

	/**
	 * Creates the dialog.
	 */
	public PreferencesDialog()
	{
		setTitle("Preferences");
		setBounds(100, 100, 531, 551);
		getContentPane().setLayout(null);

		JPanel panel = new JPanel();
		panel.setLayout(null);
		panel.setBounds(10, 435, 495, 72);
		getContentPane().add(panel);

		JButton btnApply = new JButton("Apply");
		btnApply.setBounds(406, 11, 89, 23);
		panel.add(btnApply);

		JButton btnCancel = new JButton("Cancel");
		btnCancel.setBounds(406, 45, 89, 23);
		panel.add(btnCancel);

		JButton button_2 = new JButton("Refresh");
		button_2.setBounds(293, 11, 89, 23);
		panel.add(button_2);

		JButton btnSaveAsDefault = new JButton("Save As Default");
		btnSaveAsDefault.setBounds(0, 11, 116, 23);
		panel.add(btnSaveAsDefault);

		JButton btnSave = new JButton("Save");
		btnSave.setBounds(126, 11, 89, 23);
		panel.add(btnSave);

		JButton btnDefault = new JButton("Reset to Default");
		btnDefault.setBounds(0, 45, 116, 23);
		panel.add(btnDefault);

		JButton btnLoad = new JButton("Load");
		btnLoad.setBounds(126, 45, 89, 23);
		panel.add(btnLoad);

		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		tabbedPane.setBounds(10, 11, 495, 419);
		getContentPane().add(tabbedPane);

		JPanel pnlGeneral = new JPanel();
		tabbedPane.addTab("General", null, pnlGeneral, null);
		pnlGeneral.setLayout(null);

		JLabel lblIsoLanguage = new JLabel("ISO 629-1 Language Name:");
		lblIsoLanguage.setBounds(10, 11, 162, 14);
		pnlGeneral.add(lblIsoLanguage);

		cbDefLanguage = new JComboBox();
		cbDefLanguage.setBounds(182, 8, 96, 20);
		pnlGeneral.add(cbDefLanguage);

		JLabel lblLanguagecountry = new JLabel("Language (Country)");
		lblLanguagecountry.setBounds(10, 40, 134, 14);
		pnlGeneral.add(lblLanguagecountry);

		JLabel lblLanguage = new JLabel("Language");
		lblLanguage.setBounds(10, 65, 96, 14);
		pnlGeneral.add(lblLanguage);

		JLabel lblCharacterVariation = new JLabel("Character variation");
		lblCharacterVariation.setBounds(10, 90, 124, 14);
		pnlGeneral.add(lblCharacterVariation);

		JPanel panel_1 = new JPanel();
		panel_1.setBorder(new TitledBorder(null, "Fonts", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		panel_1.setBounds(10, 136, 284, 95);
		pnlGeneral.add(panel_1);
		panel_1.setLayout(null);

		JButton btnDictionaries = new JButton("Dictionaries");
		btnDictionaries.setBounds(10, 56, 89, 23);
		panel_1.add(btnDictionaries);

		JButton btnTexts = new JButton("Texts");
		btnTexts.setBounds(10, 24, 89, 23);
		panel_1.add(btnTexts);

		JLabel lblTextFont = new JLabel("Text font");
		lblTextFont.setBounds(109, 28, 165, 19);
		panel_1.add(lblTextFont);

		JLabel lblDictionaryFont = new JLabel("Dictionary font");
		lblDictionaryFont.setBounds(109, 60, 165, 19);
		panel_1.add(lblDictionaryFont);

		JCheckBox chckbxNoojManagesMultiple = new JCheckBox("NooJ manages multiple backups");
		chckbxNoojManagesMultiple.setBounds(10, 244, 263, 20);
		pnlGeneral.add(chckbxNoojManagesMultiple);

		JButton btnAssociateFileExtensions = new JButton("Associate File Extensions");
		btnAssociateFileExtensions.setBounds(10, 292, 169, 23);
		pnlGeneral.add(btnAssociateFileExtensions);

		JTextArea textArea = new JTextArea();
		textArea.setEditable(false);
		textArea.append("Associate files of type extensions: .noc .nof .nog .nom .not with NooJ."
				+ "\nThis allows NooJ to be launched when any of these files is double-clicked."
				+ "\nYou need to run NooJ as Administrator (Right-Click on NooJ.exe, then select \"Run As Administrator\")");
		textArea.setBackground(SystemColor.control);
		textArea.setLineWrap(true);
		textArea.setWrapStyleWord(false);

		JScrollPane scrollPane = new JScrollPane(textArea);
		scrollPane.setBounds(189, 291, 291, 89);
		pnlGeneral.add(scrollPane);

		JPanel pnlLexAnalysis = new JPanel();
		tabbedPane.addTab("Lexical Analysis", null, pnlLexAnalysis, null);
		pnlLexAnalysis.setLayout(null);

		JLabel lblLexicalResources = new JLabel("Lexical Resources for: <lang>");
		lblLexicalResources.setBounds(10, 11, 159, 14);
		pnlLexAnalysis.add(lblLexicalResources);

		JLabel lblPriorityLevel = new JLabel("Priority Level:");
		lblPriorityLevel.setBounds(190, 11, 69, 14);
		pnlLexAnalysis.add(lblPriorityLevel);

		JButton btnHight = new JButton("High");
		btnHight.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnHight.setForeground(Color.RED);
		btnHight.setBounds(261, 7, 59, 23);
		pnlLexAnalysis.add(btnHight);

		JButton btnRegular = new JButton("Regular");
		btnRegular.setForeground(Color.RED);
		btnRegular.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnRegular.setBounds(330, 7, 81, 23);
		pnlLexAnalysis.add(btnRegular);

		JButton btnLow = new JButton("Low");
		btnLow.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnLow.setForeground(Color.RED);
		btnLow.setBounds(421, 7, 59, 23);
		pnlLexAnalysis.add(btnLow);

		String[] columnNames = { "Dictionary", "Priority" };
		DefaultTableModel dicModel = new DefaultTableModel(null, columnNames);
		tableDictionary = new JTable(dicModel);
		tableDictionary.setName("DictionaryTable");

		JScrollPane scrollDictionary = new JScrollPane(tableDictionary);
		scrollDictionary.setBounds(10, 36, 226, 171);
		pnlLexAnalysis.add(scrollDictionary);

		// Center priorities
		DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
		renderer.setHorizontalAlignment(JLabel.CENTER);
		for (int i = 0; i < tableDictionary.getColumnCount(); i++)
		{
			tableDictionary.setDefaultRenderer(tableDictionary.getColumnClass(i), renderer);
		}

		String[] columnNames1 = { "Morphology", "Priority" };
		DefaultTableModel morModel = new DefaultTableModel(null, columnNames1);
		tableMorphology = new JTable(morModel);
		tableMorphology.setName("MorphologyTable");

		JScrollPane scrollMorphology = new JScrollPane(tableMorphology);
		scrollMorphology.setBounds(246, 36, 234, 171);
		pnlLexAnalysis.add(scrollMorphology);

		// Center priorities
		for (int i = 0; i < tableMorphology.getColumnCount(); i++)
		{
			// table1.setDefaultRenderer(table.getColumnModel().getColumn(i), renderer);
		}

		tableDictionary.setFillsViewportHeight(true);
		tableMorphology.setFillsViewportHeight(true);

		JButton btnUncheckAllDic = new JButton("Uncheck All");
		btnUncheckAllDic.setBounds(10, 213, 89, 23);
		pnlLexAnalysis.add(btnUncheckAllDic);

		JButton btnCheckAllDic = new JButton("Check All");
		btnCheckAllDic.setBounds(147, 213, 89, 23);
		pnlLexAnalysis.add(btnCheckAllDic);

		JButton btnUncheckAllMorph = new JButton("Uncheck All");
		btnUncheckAllMorph.setBounds(246, 213, 89, 23);
		pnlLexAnalysis.add(btnUncheckAllMorph);

		JButton btnCheckAllMorph = new JButton("CheckAll");
		btnCheckAllMorph.setBounds(391, 216, 89, 23);
		pnlLexAnalysis.add(btnCheckAllMorph);

		JLabel lblLexDoc = new JLabel("Selected file");
		lblLexDoc.setBounds(10, 240, 470, 20);
		pnlLexAnalysis.add(lblLexDoc);

		JTextArea txtFileInfoLex = new JTextArea();
		txtFileInfoLex.setBounds(10, 263, 470, 96);
		txtFileInfoLex.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlLexAnalysis.add(txtFileInfoLex);

		JButton btnEditLex = new JButton("Edit");
		btnEditLex.setBounds(391, 363, 89, 23);
		pnlLexAnalysis.add(btnEditLex);

		JButton btnImportFileLex = new JButton("Import File");
		btnImportFileLex.setBounds(292, 363, 89, 23);
		pnlLexAnalysis.add(btnImportFileLex);

		JButton btnDeleteFileLex = new JButton("Delete File");
		btnDeleteFileLex.setBounds(193, 363, 89, 23);
		pnlLexAnalysis.add(btnDeleteFileLex);

		JPanel pnlSynAnalysis = new JPanel();
		tabbedPane.addTab("Syntactic Analysis", null, pnlSynAnalysis, null);
		pnlSynAnalysis.setLayout(null);

		JLabel lblAvailableSyntacticResource = new JLabel("Available Syntactic Resources for: <lang>");
		lblAvailableSyntacticResource.setBounds(10, 11, 206, 14);
		pnlSynAnalysis.add(lblAvailableSyntacticResource);

		JLabel lblApplyFollowingResources = new JLabel("Apply Following Resources:");
		lblApplyFollowingResources.setBounds(245, 11, 197, 14);
		pnlSynAnalysis.add(lblApplyFollowingResources);

		JTextArea txtFileInfoSyn = new JTextArea();
		txtFileInfoSyn.setBounds(10, 263, 470, 96);
		txtFileInfoSyn.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		pnlSynAnalysis.add(txtFileInfoSyn);

		JButton btnDeleteFileSyn = new JButton("Delete File");
		btnDeleteFileSyn.setBounds(193, 363, 89, 23);
		pnlSynAnalysis.add(btnDeleteFileSyn);

		JButton btnImportFileSyn = new JButton("Import File");
		btnImportFileSyn.setBounds(292, 363, 89, 23);
		pnlSynAnalysis.add(btnImportFileSyn);

		JButton btnEditSyn = new JButton("Edit");
		btnEditSyn.setBounds(391, 363, 89, 23);
		pnlSynAnalysis.add(btnEditSyn);

		DefaultListModel listModel = new DefaultListModel();
		JList listSynResources = new JList(listModel);

		JScrollPane scrollSynResources = new JScrollPane(listSynResources);
		scrollSynResources.setBounds(10, 37, 185, 181);
		pnlSynAnalysis.add(scrollSynResources);

		String[] columnNamesResources = { "Order", "Grammar" };
		DefaultTableModel resModel = new DefaultTableModel(null, columnNamesResources);
		JTable tableResources = new JTable(resModel);
		tableResources.setAutoCreateRowSorter(true);

		JScrollPane scrollResources = new JScrollPane(tableResources);
		scrollResources.setBounds(243, 37, 194, 181);
		pnlSynAnalysis.add(scrollResources);

		JButton buttonTransfer = new JButton(">");
		buttonTransfer.setFont(new Font("Tahoma", Font.BOLD, 11));
		buttonTransfer.setForeground(Color.RED);
		buttonTransfer.setBounds(199, 37, 41, 34);
		pnlSynAnalysis.add(buttonTransfer);

		JButton btnH = new JButton("H");
		btnH.setForeground(Color.RED);
		btnH.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnH.setBounds(442, 36, 40, 34);
		pnlSynAnalysis.add(btnH);

		JButton btnL = new JButton("L");
		btnL.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnL.setForeground(Color.RED);
		btnL.setBounds(442, 81, 40, 34);
		pnlSynAnalysis.add(btnL);

		JButton btnX = new JButton("X");
		btnX.setForeground(Color.RED);
		btnX.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnX.setBounds(442, 184, 40, 34);
		pnlSynAnalysis.add(btnX);

		JLabel lblFileLocation = new JLabel("File location");
		lblFileLocation.setBounds(10, 229, 389, 14);
		pnlSynAnalysis.add(lblFileLocation);

		// Adding listeners
		CopyToPreferences copyToPreferences = new CopyToPreferences(cbDefLanguage, chckbxNoojManagesMultiple,
				tableResources, this);

		UpdateDialogListener updateDialogListener = new UpdateDialogListener(cbDefLanguage, TFont, DFont, lblTextFont,
				lblDictionaryFont);
		// Texts button
		btnTexts.addActionListener(new TextsActionListener(this, lblTextFont));
		// Dictionaries
		btnDictionaries.addActionListener(new DictionariesActionListener(this, lblDictionaryFont));
		// Associate file extension
		btnAssociateFileExtensions.addActionListener(new AssociateFileExtensionActionListener());
		// Reset to default
		btnDefault.addActionListener(new DefaultActionListener(updateDialogListener));

		// Load
		btnLoad.addActionListener(new LoadActionListener(this, updateDialogListener));
		// Refresh
		button_2.addActionListener(new RefreshActionListener());

		// Cancel
		btnCancel.addActionListener(new CancelActionListener(this));
		// Import lexeme
		btnImportFileLex.addActionListener(new ImportLexActionListener(this, updateDialogListener));
		// Table Update listener
		UpdateTablesListener tableListener = new UpdateTablesListener(scrollDictionary, scrollMorphology,
				tableDictionary, tableMorphology, listSynResources, tableResources, btnEditLex, btnHight, btnLow,
				btnDeleteFileLex, cbDefLanguage, txtFileInfoLex, lblLexDoc, copyToPreferences, this);
		// Select language
		cbDefLanguage.addActionListener(new SelectDefLanguageActionListener(cbDefLanguage, lblLexicalResources,
				lblAvailableSyntacticResource, lblLanguagecountry, lblLanguage, lblCharacterVariation, tableListener));
		// Check all Dic
		btnCheckAllDic.addActionListener(new CheckAllActionListener(this, 0, true));
		// Uncheck all Dic
		btnUncheckAllDic.addActionListener(new CheckAllActionListener(this, 0, false));
		// Check all morphology
		btnCheckAllMorph.addActionListener(new CheckAllActionListener(this, 1, true));
		// Uncheck all mor
		btnUncheckAllMorph.addActionListener(new CheckAllActionListener(this, 1, false));

		// High priority button
		btnHight.addActionListener(new PriorityLexActionListener(1, lblLexDoc, this));
		// Low priority button
		btnLow.addActionListener(new PriorityLexActionListener(-1, lblLexDoc, this));
		// Regular priority button
		btnRegular.addActionListener(new PriorityLexActionListener(0, lblLexDoc, this));

		// Button transfer
		buttonTransfer.addActionListener(new AddGrmActionListener(listSynResources, tableResources));
		// Button High priority syn
		btnH.addActionListener(new PrioritySynActionListener(-1, tableResources));
		// Button Low priority syn
		btnL.addActionListener(new PrioritySynActionListener(1, tableResources));
		// Button X priority syn
		btnX.addActionListener(new PrioritySynActionListener(0, tableResources));

		btnDeleteFileLex.addActionListener(new DeleteLexActionListener(this, lblLexDoc, lblFileLocation,
				btnDeleteFileLex, btnDeleteFileSyn, tableListener, cbDefLanguage));

		btnDeleteFileSyn.addActionListener(new DeleteLexActionListener(this, lblLexDoc, lblFileLocation,
				btnDeleteFileLex, btnDeleteFileSyn, tableListener, cbDefLanguage));

		btnEditLex.addActionListener(new EditLexActionListener(this, lblLexDoc));

		btnEditSyn.addActionListener(new EditLexActionListener(this, lblLexDoc));

		updateDialogListener.updateFromFormMainPreferences();

		// Apply
		btnApply.addActionListener(new ApplyActionListener(this, copyToPreferences));
		// Save
		btnSave.addActionListener(new SaveActionListener(this, copyToPreferences));
		// Save as default
		btnSaveAsDefault.addActionListener(new SaveAsDefaultActionListener(copyToPreferences));
	}

	public JComboBox getCbDefLanguage()
	{
		return cbDefLanguage;
	}

	public void setCbDefLanguage(JComboBox cbDefLanguage)
	{
		this.cbDefLanguage = cbDefLanguage;
	}

	public Font getDFont()
	{
		return DFont;
	}

	public void setDFont(Font dFont)
	{
		DFont = dFont;
	}

	public Font getTFont()
	{
		return TFont;
	}

	public void setTFont(Font tFont)
	{
		TFont = tFont;
	}

	public JTable getTableMorphology()
	{
		return tableMorphology;
	}

	public void setTableMorphology(JTable tableMorphology)
	{
		this.tableMorphology = tableMorphology;
	}

	public JTable getTableDictionary()
	{
		return tableDictionary;
	}

	public void setTableDictionary(JTable tableDictionary)
	{
		this.tableDictionary = tableDictionary;
	}
}
