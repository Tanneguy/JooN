#OpenNooJ 1.0
TYPE MORPHOLOGY
ILANGUAGE en
OLANGUAGE en
NUMBEROFGRAPHS 1
SIZE 1047 763
SCALE 100
IFONT Times New Roman:R:12
OFONT Courier New:B:12
CFONT Times New Roman:R:12
AUXICOLOR 65535
BACKCOLOR 16777215
COMMCOLOR 32768
FORECOLOR 0
SELECOLOR 16711680
VARCOLOR 255
DISPFRAME n
DISPDATE y
DISPFILENAME y
DISPDIRNAME y
#
#
Main
18
"$(Pref" 21 130 3 2 16 17 
"" 417 31 0 
"re/<INFO\+RE>" 77 72 1 3 
"$)" 127 130 1 11 
"<E>/<$Verb=:V>" 338 130 1 10 
"prefix..." 75 39 1 14 
"<L>" 219 130 2 9 6 
"\"$1L\" => Lemma of the lexical constraint+\"$1C\" => Category+\"$1S\" => Syntactic & semantic information+\"$1F\" => Inflectional information" 703 54 0 
"Max Silberztein+The constraint <$Verb=:V> verifies that the prefixed form actually+is a verb. This grammar is naive (or productive) because it+does not distinguish \"remount\" from \"? resmile\".+To remove the productivity, one would have to encode+each verb that accepts this derivation with a special feature, e.g. \+RE+and then, use this code in the constraint, e.g. <$Verb=V\+RE>" 20 528 0 
"$)" 291 130 1 4 
"<E>/<$1L,V$1S$1F>" 375 47 1 1 
"$(Verb" 168 130 1 6 
"=> <mounts=:V> : \"mounts\" must be a verb" 309 195 0 
"=> <mount,V\+tr\+PR\+3\+s\+RE>" 381 97 0 
"... mounts" 204 39 0 
"The recursive operator \"=:\" in the+lexical constraint allows this+grammar to be called recursively.+For instance, it will recognize+the word form \"rereremounts\"." 416 268 0 
"dis/<INFO\+DE>" 68 198 1 3 
"de/<INFO\+DE>" 68 130 1 3 
# NooJ
# Enter examples, *counter-examples and #comments
#
remounts
